server {
    listen 80;
    server_name localhost;
    root /var/www/html/public;
    index index.php;

    # 允许所有 S3 需要的 HTTP 方法
    if ($request_method !~ ^(GET|PUT|POST|HEAD|DELETE|OPTIONS)$) {
        return 405;
    }

    location / {
        # CORS 配置
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, HEAD, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Amz-Date,X-Amz-User-Agent,X-Amz-Content-Sha256' always;

        # 处理 OPTIONS 请求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        # 传递原始请求方法到 PHP
        fastcgi_param REQUEST_METHOD $request_method;
        
        # 增加缓冲区大小，处理大请求
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
    }

    # 禁止访问隐藏文件
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # 允许大文件上传
    client_max_body_size 5G;
    
    # 增加超时时间，适应大文件传输
    client_body_timeout 300s;
    fastcgi_read_timeout 300s;
    fastcgi_send_timeout 300s;
    proxy_read_timeout 300s;
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;

    # 启用 gzip 压缩
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000;
    gzip_proxied any;
}
